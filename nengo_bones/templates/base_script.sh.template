{% block header %}
#!/usr/bin/env bash

# Automatically generated by nengo-bones, do not edit this file directly

NAME=$0
COMMAND=$1
STATUS=0  # used to exit with non-zero status if any command fails
# shellcheck disable=SC2034
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

export JOB_NUMBER="$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT"
if [[ -n "$JOB_SUFFIX" ]]; then
    export JOB_NUMBER="$JOB_NUMBER-$JOB_SUFFIX"
fi
export GIT_BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
if [[ "$GITHUB_REF_TYPE" == "tag" ]]; then
    export GIT_TAG="$GIT_BRANCH"
fi

exe() {
    echo "\$ $*";
    # remove empty spaces from args
    args=( "$@" )
    for i in "${!args[@]}"; do
      [ -n "${args[$i]}" ] || unset "args[$i]"
    done
    "${args[@]}" || { echo -e "\033[1;31mCOMMAND '${args[0]}' FAILED\033[0m"; STATUS=1; }
}

if [[ ! -e {{ pkg_name }} ]]; then
    echo "Run this script from the root directory of this repository"
    exit 1
fi
{% endblock %}

if [[ "$COMMAND" == "install" ]]; then
    {% block install %}
    {% if pip_install %}
    exe pip install {%- for pkg in pip_install %} "{{ pkg }}" {%- endfor %}

    {% else %}
    :

    {% endif %}
    {% endblock %}
elif [[ "$COMMAND" == "script" ]]; then
    {% if pre_commands %}
    {% for cmd in pre_commands %}
    exe {{ cmd }}
    {% endfor %}
    {% endif %}

    {% block script %}
    :
    {% endblock %}

    {% if post_commands %}
    {% for cmd in post_commands %}
    exe {{ cmd }}
    {% endfor %}
    {% endif %}
elif [[ "$COMMAND" == "after_success" ]]; then
    {% block after_success %}
    :
    {% endblock %}
elif [[ "$COMMAND" == "after_failure" ]]; then
    {% block after_failure %}
    :
    {% endblock %}
elif [[ "$COMMAND" == "after_script" ]]; then
    {% block after_script %}
    :
    {% endblock %}
elif [[ -z "$COMMAND" ]]; then
    echo "$NAME requires a command like 'install' or 'script'"
else
    echo "$NAME does not define $COMMAND"
fi

exit "$STATUS"
