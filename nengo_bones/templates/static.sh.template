{% extends "base_script.sh.template" %}

{% block header %}
{{ super() }}

shopt -s globstar
{% endblock %}

{% block install %}
{{ super() }}
    exe pip install "jupyter>=1.0.0" "pylint>=1.9.2" "codespell>=1.12.0" "gitlint>=0.1.2" "collective.checkdocs>=0.2" "flake8>=3.7.7"
{% endblock %}

{% block script %}
    exe pylint {{ pkg_name }} --rcfile=setup.cfg --jobs=0
    exe flake8 {{ pkg_name }}
    if ls docs/**/*.ipynb &>/dev/null; then
        exe jupyter nbconvert \
            --log-level WARN \
            --to python \
            --TemplateExporter.exclude_input_prompt=True \
            --TemplateExporter.exclude_markdown=True \
            -- docs/**/*.ipynb
        # Remove style issues introduced in the conversion:
        #   s/# $/#/g replaces lines with just '# ' with '#'
        #   /get_ipython()/d removes lines containing 'get_ipython()'
        #   $ d removes a trailing newline
        for nb_file in docs/**/*.ipynb; do
            sed -i \
                -e 's/# $/#/g' \
                -e '/get_ipython()/d' \
                -e '$ d' \
                -- "${nb_file%.ipynb}.py"
        done
    fi
    if [[ "$(python -c 'import sys; print(sys.version_info >= (3, 6))')" == "True" ]]; then
        exe black --check {{ pkg_name }}
    fi
    exe pylint docs --rcfile=setup.cfg --jobs=0 --disable=missing-docstring,trailing-whitespace,wrong-import-position,unnecessary-semicolon
    exe flake8 docs --extend-ignore=E402,E703,W291,W293,W391
    for nb_file in docs/**/*.ipynb; do
        rm "${nb_file%.ipynb}.py"
    done
    exe codespell -q 3 \
        --skip="./build,*/_build,*-checkpoint.ipynb,./.eggs,./.git,*/_vendor"
        {%- if codespell_ignore_words %} \
        --ignore-words-list="{{ codespell_ignore_words | join(",") }}"
        {%- endif %}

    exe shellcheck -e SC2087 .ci/*.sh
    # undo single-branch cloning
    git config --replace-all remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
    git fetch origin master
    N_COMMITS=$(git rev-list --count HEAD ^origin/master)
    for ((i=0; i<N_COMMITS; i++)) do
        {# TODO: way to get this working properly with exe? #}
        git log -n 1 --skip $i --pretty=%B \
            | grep -v '^Co-authored-by:' \
            | gitlint -vvv || STATUS=1
    done
    exe python setup.py checkdocs
{% endblock %}
